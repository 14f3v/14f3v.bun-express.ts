{
	// Place your POS workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	/**
 * RemoveStatusController()
 * 
 * @param req 
 * @param res 
 * @param next
 * @returns 
 */
	"TypeScript Create Singleton Class Snippet": {
		"scope": "typescript",
		"prefix": "TSCCST",
		"description": "Create Singleton Class for typescript",
		"body": [
			"class ${1} {",
            "   private static instance: ${1};",
            "   constructor() {",
            "        this.initialize();",
            "   };",
            "   public static getInstance(): ${1} {",
            "       if (!${1}.instance) {",
            "           ${1}.instance = new ${1}();",
            "       }",
            "       return ${1}.instance;",
            "   };",
            "",
            "   private initialize() {",
            "",
            "   };",
            "",
            "}; interface I${1} extends ${1} { };",
            "",
            "export type { I${1} };",
            "export default ${1};",
            "",
		],
	},
	"TypeScript Create Class Snippet": {
		"scope": "typescript",
		"prefix": "TSCC",
		"description": "Create Class for typescript",
		"body": [
			"class ${1} {",
            "   ${2}",
            "}; interface I${1} extends ${1} { };",
            "",
            "export type { I${1} };",
            "export default ${1};",
            "",
		],
	}
}